<!DOCTYPE html>
<html lang="en" ng-app="MyApp">
<head>
    <!--
    index.ejs is the file that loads all other pages in this single page application.
    We don't need a separate view folder for views in here, as this is really the only one that needs to be over here.
    If you really want to pass something through to the angular through ejs and dynamic scripting, you'll need to refresh the page.
    -->
    <base href="/">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="../../favicon.ico">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">

    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous">

    <!-- Latest compiled and minified JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>

    <title update-title></title>
    <!--
    Should we do a single page application?
    Without it, Angular frontend becomes a mess of dependencies in each page, especially with headers and footers.
    Also, think of the resumes that will go unadorned with the words single page application; it's the standard!
     -->
    <!-- Bootstrap Core CSS -->
    <link href="Assets/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="Assets/css/grayscale.css" rel="stylesheet">



    <!-- Custom Fonts -->
    <link href="Assets/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <link href="http://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic" rel="stylesheet" type="text/css">
    <link href="http://fonts.googleapis.com/css?family=Montserrat:400,700" rel="stylesheet" type="text/css">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->

    <!-- Jquery for Modals -->
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <script src="http://netdna.bootstrapcdn.com/bootstrap/3.0.3/js/bootstrap.min.js"></script>



</head>
<style>
    .modal-footer{
        text-align: left;
    }

    .form-inline .form-group {
        margin-bottom: 11px;
    }

    .form-inline .control-label {
        width: 110px;
        text-align:right;
        margin-right: 10px;
    }
    .modal-content {
        color: #000;
    }
    mark {
        background-color: hsla(120, 100%, 75%, 0.3);
        color: white;
    }
</style>

<body id="page-top" data-spy="scroll" data-target=".navbar-fixed-top">
<div ng-include="'shared/headers/newheader.ejs'"></div>
<!-- important to not use another container. want content directly put into view.-->
<ui-view></ui-view>
<!--<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>-->
<script src="https://code.angularjs.org/1.5.0/angular.min.js"></script>
<script src="bower_components/angular-bootstrap/ui-bootstrap.min.js"></script>
<script src="bower_components/angular-bootstrap/ui-bootstrap-csp.css"></script>
<script src="bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.8/angular-ui-router.min.js"></script>
<script src="https://code.angularjs.org/1.5.0/angular-resource.min.js"></script>
<script src="Assets/js/jquery.js"></script>

<!-- Bootstrap Core JavaScript -->
<script src="Assets/js/bootstrap.min.js"></script>

<!-- Plugin JavaScript -->
<script src="Assets/js/jquery.easing.min.js"></script>

<!-- Google Maps API Key - Use your own API key to enable the map feature. More information on the Google Maps API can be found at https://developers.google.com/maps/ -->
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCRngKslUGJTlibkQ3FkfTxj3Xss1UlZDA&sensor=false"></script>

<!-- Custom Theme JavaScript -->
<script src="Assets/js/grayscale.js"></script>
<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
<script src="../../assets/js/ie10-viewport-bug-workaround.js"></script>

<script src="MyApp.js"></script>
<script>//This is bad code. not sure what to do with it.
   app.factory('serverInfo', function(){
        /*
         pass any information as an object called data within the object. Can't pass it directly for now; can't find a way.
         Call serverInfo() and include serverInfo in the dependencies at the top of the controller to access in javascript files
         Can't be done elsewhere as this is the only page generated dynamically.
         */
        return <%- locals ? JSON.stringify(locals) : "{}"%>;//works. define what you want to transfer as data in those
    })

    var generateResource = function(name) {//
        //console.log(name);
        app.factory(name, function ($resource) {
            var q = $resource('api/' + name + '/:_id', {_id: '@_id'}, {
                update: {
                    method: 'PUT'
                },
                create: {
                    method: 'POST'
                }
            });
            q.prototype.$save = function(callback) {
                if (this._id) {
                    return this.$update(callback);
                } else {
                    return this.$create(callback);
                }
            };

            return q;
        });

    }
    var modelNameList = <%- locals.models ? JSON.stringify(locals.models) : "{}"%>;
    for (var i = 0; i < modelNameList.length; i++)
        generateResource(modelNameList[i]);
</script>

<script src="components/register/Register.js"></script>
<script src="components/profile/profile.js"></script>
<script src="components/login/login.js"></script>
<script src="components/LogOut/LogOut.js"></script>
<script src="components/createAd/createAd.js"></script>
<script src="components/viewListing/viewListing.js"></script>
<script src="components/home/home.js"></script>
<script src="shared/headers/header.js"></script>
</body>
</html>